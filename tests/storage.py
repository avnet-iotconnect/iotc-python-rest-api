import filecmp

import requests

from avnet.iotconnect.restapi.lib import storage, util

# Enable trace programmatically or set environment variable to see more output
# from avnet.iotconnect.restapi.lib import config as cfg
# cfg.api_trace_enabled = True


# A GUID can be generated by the built-in python module uuid eg. uuid.uuid4().upper().
# However for this test we do not want to generate one on the fly as we lose the opportunity to clean up if we fail.
MY_APP_GUID = '8BBEEDCD-EB33-436A-B69C-3FDC58EC6D37'  # An arbitrary unique guid for our app.

# We recommend using "firmware" and not "custom" as this will actually make it easier to download the files.
# "Custom" seems to be broken at the moment.
MODULE_TYPE = storage.FILE_MODULE_FIRMWARE

result = storage.get_files(MODULE_TYPE, MY_APP_GUID)
print('Initial list of files:', result)

# clean up any old files that we tested with
for f in result:
    storage.delete_match_guid(MODULE_TYPE, f.guid)
    print("Deleted ", f.guid, f.name)

result = storage.create(MODULE_TYPE, MY_APP_GUID, file_path='test.zip')
print(result)

result = storage.get_files(MODULE_TYPE, MY_APP_GUID)
print('Files after create:', result)

for f in result:
    if f.name == 'test.zip':
        req = requests.get(f.file)
        with open('downloaded-zip.tmp', 'wb') as new_file:
            new_file.write(req.content)
        if util.file_md5('downloaded-zip.tmp') != util.file_md5('test.zip') != f.tag:
            print('Downloaded file MD5 hash mismatch.')
        else:
            print('Downloaded file MD5 hash match.')
        if filecmp.cmp('test.zip', 'downloaded-zip.tmp'):
            print('File download compared and it matches.')
        else:
            raise ValueError('Files are not identical')

for f in result:
    storage.delete_match_guid(MODULE_TYPE, f.guid)
    print("Deleted ", f.guid, f.name)

result = storage.get_files(MODULE_TYPE, MY_APP_GUID)
print('Files after delete:', result)
